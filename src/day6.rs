use std::{
    collections::{HashMap, HashSet},
    sync::{atomic::AtomicUsize, Arc},
};

use ndarray::{Array2, Axis};
use rayon::prelude::*;

#[derive(Debug, Clone, Eq, PartialEq)]
enum Direction {
    Up,
    Down,
    Left,
    Right,
}

impl Direction {
    fn next(&self, (line_num, member_num): (usize, usize)) -> Option<(usize, usize)> {
        match &self {
            Self::Up => line_num
                .checked_sub(1)
                .map(|line_num| (line_num, member_num)),
            Self::Down => line_num
                .checked_add(1)
                .map(|line_num| (line_num, member_num)),
            Self::Left => member_num
                .checked_sub(1)
                .map(|member_num| (line_num, member_num)),
            Self::Right => member_num
                .checked_add(1)
                .map(|member_num| (line_num, member_num)),
        }
    }

    const fn turn(&self) -> Self {
        match &self {
            Self::Up => Self::Right,
            Self::Down => Self::Left,
            Self::Left => Self::Up,
            Self::Right => Self::Down,
        }
    }
}

fn parser(input: &str) -> (Direction, (usize, usize), Array2<bool>) {
    let mut init_direction = None;
    let mut init_line_num = None;
    let mut init_member_num = None;
    let mut line_count = 0;
    let mut line_length = 0;

    let raw_map = input
        .lines()
        .enumerate()
        .flat_map(|(line_num, line)| {
            line_count += 1;
            line.chars()
                .enumerate()
                .map(|(member_num, char)| {
                    if line_count == 1 {
                        line_length += 1;
                    }
                    match char {
                        '.' => false,
                        '#' => true,
                        '^' => {
                            init_line_num.replace(line_num);
                            init_member_num.replace(member_num);
                            init_direction.replace(Direction::Up);
                            false
                        }
                        'v' => {
                            init_line_num.replace(line_num);
                            init_member_num.replace(member_num);
                            init_direction.replace(Direction::Down);
                            false
                        }
                        '<' => {
                            init_line_num.replace(line_num);
                            init_member_num.replace(member_num);
                            init_direction.replace(Direction::Left);
                            false
                        }
                        '>' => {
                            init_line_num.replace(line_num);
                            init_member_num.replace(member_num);
                            init_direction.replace(Direction::Right);
                            false
                        }
                        _ => unreachable!(),
                    }
                })
                .collect::<Vec<_>>()
        })
        .collect();

    (
        init_direction.unwrap(),
        (init_line_num.unwrap(), init_member_num.unwrap()),
        Array2::from_shape_vec((line_count, line_length), raw_map).unwrap(),
    )
}

fn part_1(input: &str) -> usize {
    let (mut direction, (mut line_num, mut member_num), map) = parser(input);

    let mut set = HashSet::new();

    'main: loop {
        set.insert((line_num, member_num));

        'inner: loop {
            let Some((next_line_num, next_member_num)) = direction.next((line_num, member_num))
            else {
                break 'main;
            };

            match map.get((next_line_num, next_member_num)) {
                Some(true) => {
                    direction = direction.turn();
                    continue 'inner;
                }
                Some(false) => {
                    line_num = next_line_num;
                    member_num = next_member_num;
                    break 'inner;
                }
                None => break 'main,
            }
        }
    }

    set.len()
}

fn part_2(input: &str) -> usize {
    let (direction, (line_num, member_num), map) = parser(input);

    let sum = Arc::new(AtomicUsize::new(0));
    let map = Arc::new(map);

    let coordinates = (0..map.len_of(Axis(0)))
        .flat_map(|line_num| (0..map.len_of(Axis(0))).map(move |member_num| (line_num, member_num)))
        .collect::<Vec<(usize, usize)>>();

    coordinates.into_par_iter().for_each(|coordinate| {
        let map_arc = map.clone();
        let sum_arc = sum.clone();
        let mut direction = direction.clone();
        let (mut line_num, mut member_num) = (line_num, member_num);

        let mut map = HashMap::new();

        'main: loop {
            'inner: loop {
                let Some((next_line_num, next_member_num)) = direction.next((line_num, member_num))
                else {
                    break 'main;
                };

                if next_line_num == coordinate.0 && next_member_num == coordinate.1 {
                    direction = direction.turn();
                    if let Some(prev_direction) = map.get(&(next_line_num, next_member_num)) {
                        if prev_direction == &direction {
                            sum_arc.fetch_add(1, std::sync::atomic::Ordering::Relaxed);
                            break 'main;
                        }
                    }
                    map.insert((next_line_num, next_member_num), direction.clone());
                    continue 'inner;
                }

                match map_arc.get((next_line_num, next_member_num)) {
                    Some(true) => {
                        direction = direction.turn();
                        if let Some(prev_direction) = map.get(&(next_line_num, next_member_num)) {
                            if prev_direction == &direction {
                                sum_arc.fetch_add(1, std::sync::atomic::Ordering::Relaxed);
                                break 'main;
                            }
                        }
                        map.insert((next_line_num, next_member_num), direction.clone());
                        continue 'inner;
                    }
                    Some(false) => {
                        line_num = next_line_num;
                        member_num = next_member_num;
                        break 'inner;
                    }
                    None => break 'main,
                }
            }
        }
    });

    sum.load(std::sync::atomic::Ordering::Relaxed)
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn p1_example() {
        const INPUT: &str = r"....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...";
        assert_eq!(part_1(INPUT), 41)
    }

    #[test]
    fn p1_puzzle() {
        assert_eq!(part_1(INPUT), 4433)
    }

    #[test]
    fn p2_example() {
        const INPUT: &str = "....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...";
        assert_eq!(part_2(INPUT), 6)
    }

    #[test]
    fn p2_puzzle() {
        assert_eq!(part_2(INPUT), 1516)
    }
}

const INPUT: &str = r"...#..................#...................#......................#..............................#.............................#...
....#.......................#........#.#..............##...........#.....#..........#..........................#..................
.............#........................................................................#.........#.#..#..#..........#..............
..........#.......#..........#..................#........##...................#..............#....................................
....................#..........................................................#..#.....................................#.........
....#............................#..............................................#.....................#..........##....#..........
.......#.............#......................................................................#.............#.........#.............
....###......................#....#...........#.....#................................#..........................#.................
..........#..#...........#..#........................................................#.....#...........#................#.........
..#....#......#....#....#...................................................................#.....................................
....................#............#............................................#......#....#...............................#.......
..........#.......#.........#.......#.............................................................................................
.......#...#.......................................#...................#..........................................................
.......#........#............................#.....#.......#..............................................#..................#...#
.....................#.................................#................#...#...............#.....#.#..........................#..
.....#..........................................#......................#.............##..............................#........#...
.....#......#.........................#..........................#..........................................................#..#..
.#......#.............#......#.................................................#.....#...................##......#................
.............................................................................##...................................................
........................................#.......................................#........#.............................#.#.......#
...........#.....................................#.............................#......#......#..#....................#..#.........
.............................................#.......................#..................##....#.....#.............................
........................#..............................................................#..........................................
#..............#.........................#........#...#...............#..............#..................#....................##...
...#...#.............................#.......#................................................#........................#....#.....
.....#.........................#..#.......................#..........#.....................#..................#.#.....#...........
..................#........#..#.......#...................................................................................#....#..
..#...#...............................................#.#..#........................................................#....#......#.
...............#...............#..........................#............................#..........#.............#.................
............#.....#........#.........................................................#........#........#.....#........#......#....
............................#.........#....#........#.....#...#.............#.................................#...................
........#..................#....#..........................................................#.#.#..................................
....................................................................................................................#.............
#............#.............#..................#......................................................................#............
...............................#....#..........#...........##........................................................#.........#.#
................#.........................................#.................................................#........#............
..............................................#............#................#........#........................#...................
..................#.........#..........................#.............#...............#............#....................#..........
........................#...#...............................................#..............#.....#.....................#..........
...........#.......................................#..............................#..................#....#...##..................
#...............#..................#...............................#...............................#.....................#........
.............#...............................................................##...................................................
.................#.............#.......................#...#............#.#....#................................#...........#.....
#......#......#..................................##.................#.#...............................#...........................
.#...............#..........#...............................................#...#..........#..........#...........................
.....................................#............................#....#.............................................#...#........
......#...#.............#.#....................#.........#..........##.................................#..........#..........#....
.............................#..................#....#..............##.......................#.#.....#........#...................
.................................................#.#......................................................#................#......
......................................#..........................................#......#.........................................
#....................#...........................................................#..................#.............................
.....#.........#...................................................#....#.#....#.#.........#......................................
........#..........#......#.............#................................#.....#................#.................................
...........#................................#...........#..........#......#.............#........................#................
.......#...............#....................#..#................................................#.................................
.....................#.........#..#............#..........#...........#...........#...............................#...............
................#...#........#...........#..........................................................#..#...................#......
.........................................................#.....................#...#......................#.#....................#
................#......#....#.#..............#............#.......................................................................
..........#.....................................#......................................................................#..........
#......................................#.......#.....##..#.....................#.........#.......#................................
........#...#..............#....................#................................#..............................................#.
.##............................................................................#......#................................#..........
.#........................#..............#..............................................#........#.....#.......#..................
#......................................#.....................#...................................................................#
............................#.....#.....#............#...............#...#.......#.........#......................................
.#.........................#.......................#.........#.......#.................#............................#..#..........
.............................................................................................................#........##..........
...........#...#...#.#................#.....................................#........#............................................
......#.......................#..........#.......#................................................................#...............
........#....#........#..................#....##.....#............#..............................#...........#...........#..#.....
..................................#...............................................................................#...............
.....................#.#.......................#....................................#.............................................
........................................................................................#.........#.................#.........#...
..........................#..........#....#..........................................#.......................#............#.#.....
...............................................#.#....#...............................#...................#......................#
.....#...........#........#.#.......#.............................#..................#............................................
...............#.........................................................#....................#.................#.............#...
#....................................##..........#................................................................#...............
...............#.................#...#..............#......................................................#..............#.......
...................#......#.............................................#......................................................#.#
..#.............#.......#......#....#..#..#.......................................................................................
.........#....................................................#.....................................#..............#..............
..............#..............#................................................................#.......................#...........
..........................#.................#.......................................................##...................#.#......
...............#..#...................................................................................................#.......###.
...#.....................#..#........#..........#..................................................................##.............
.................#.......................................###..............#.........................#.............................
...#.....................................................#.......#..........................#................#..#.................
...................................................#..................#.........................................................#.
.....#.............#...................#...................#.....................................#................................
.....................#.........................#......#...........................................................................
...........#...............#......#.....##...#...#.............................................#........#.#...............#...#...
..............#..............##...........#.......................#..#.^..........................................................
...................#..............................................................................................................
..................#.......#..........#.......#..................#..........#...................................#..................
..............................................................................................#..................................#
......................................................#................#......................#...................................
..............#.........#..............................#.....................#......................#.............................
#................#.........#................#.............................#......................#..#...#..............#..........
.#..#........#................#...............#..................#........#.....................#............#........#...........
.....................................................#.#.........#......................#.............................#........#..
......................#.....................#..#......#..........................#............................#......#............
......................#.........................#..#..................................#.......................#..............#....
..........................#..................#.............#......................................................#...............
..........................#....#........................................#..#...#....#.................#...........................
.......#...........#.......................#............##........#....................................................#..........
#..........................................................................#...........#..........................................
............................................................#.................#..#........................................##......
..#...............................................#....#.................................................##.....#...##.....#......
...#.....##..............................#.........................................................#............#.................
.....#....##............................#....##..........#...#....................................................................
..................................................#..........................#.........##.......#.......................#.........
.........#.....#..........#........#........................#.##..#............#.......................................#..........
.....#...............#.......#..........#.#..........#.....................#.....................................#.....#..........
....#......#............................................................................................##...#.#.#.........#......
...........#........................#.....#....................#..................#.#........#....................................
....................................................#................#.#................................................#.........
..........#..............#.......................#.................#...................................#.............#.#......##..
................##......................................................#.................#.......#.#....................#........
................#......................................................#.............##...............#.....#......#.......#......
..............................#............................#..........#...........#...............................................
.......#.............#....................................................................#..............................#.#......
...#.....................#.#...............................................................#...#..#....#..........................
....#.........##......#..............................................................................#..................#.........
....#..........................................#......#...................#........##............#................................
..#.......#......#............#........#...#.#...........................#.......#................................................
..........................#...#....................#...............#...#......#.#...#...#...............#.#.#.....................
....##.#....................................................................#...#.....##........................#.##..............
.............................................#....................................................................................";
